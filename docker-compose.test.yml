version: '3.8'

services:
  # Тестовая база данных PostgreSQL
  postgres-test:
    image: postgres:latest
    container_name: postgres-test
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_arbitrage
    ports:
      - "5433:5432"  # Используем другой порт, чтобы не конфликтовать с основной базой
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Тестовый MarketDataService
  marketdataservice-test:
    build:
      context: ./src/MarketDataService
      dockerfile: Dockerfile
    container_name: marketdataservice-test
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
    depends_on:
      postgres-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Тестовый ArbitrageCalculatorService
  arbitragecalculatorservice-test:
    build:
      context: ./src/ArbitrageCalculatorService
      dockerfile: Dockerfile
    container_name: arbitragecalculatorservice-test
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
      - ServiceUrls__MarketDataService=http://marketdataservice-test:80
    depends_on:
      - marketdataservice-test
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Тестовый DataStorageService
  datastorageservice-test:
    build:
      context: ./src/DataStorageService
      dockerfile: Dockerfile
    container_name: datastorageservice-test
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
      - ConnectionStrings__DefaultConnection=Host=postgres-test;Database=test_arbitrage;Username=postgres;Password=postgres
    depends_on:
      postgres-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Тестовый SchedulerService
  schedulerservice-test:
    build:
      context: ./src/SchedulerService
      dockerfile: Dockerfile
    container_name: schedulerservice-test
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
      - ServiceUrls__MarketDataService=http://marketdataservice-test:80
      - ServiceUrls__ArbitrageCalculatorService=http://arbitragecalculatorservice-test:80
      - ServiceUrls__DataStorageService=http://datastorageservice-test:80
    depends_on:
      - marketdataservice-test
      - arbitragecalculatorservice-test
      - datastorageservice-test
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Контейнер для запуска тестов
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.Tests
    depends_on:
      - postgres-test
      - marketdataservice-test
      - arbitragecalculatorservice-test
      - datastorageservice-test
      - schedulerservice-test
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres-test;Database=test_arbitrage;Username=postgres;Password=postgres
      - ServiceUrls__MarketDataService=http://marketdataservice-test:80
      - ServiceUrls__ArbitrageCalculatorService=http://arbitragecalculatorservice-test:80
      - ServiceUrls__DataStorageService=http://datastorageservice-test:80
      - ServiceUrls__SchedulerService=http://schedulerservice-test:80

volumes:
  postgres_test_data: